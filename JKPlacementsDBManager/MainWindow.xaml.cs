using System;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using MySql.Data.MySqlClient;

namespace JKPlacementsDBManager
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public static DataTable company = new DataTable();
        public static DataTable contacts = new DataTable();
        public static DataTable pending = new DataTable();

        public static DBConnect connectionObj;

        public static string ServerLogLocation = "ServerConnSettings";

        public MainWindow()
        {
            InitializeComponent();
        }

        private void ConnSettingsButton_Click(object sender, RoutedEventArgs e)
        {
            ServerConnectionSettingsAuthorization connSettingsAuthorizationWindow = new ServerConnectionSettingsAuthorization();
            this.Opacity = 0.5;
            connSettingsAuthorizationWindow.ShowDialog();
            this.Opacity = 1;
        }

        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            connectionObj = new DBConnect();
            fillTable("SELECT * FROM " + connectionObj.table1 + ";", ref company);
            modifyDGrid(company);
            File.AppendAllText(@ServerLogLocation, "\n------SESSION START TIMESTAMP : " + DateTime.Now.ToString() + " ------\n");
        }

        private void fillTable(string queryString, ref DataTable dt)
        {
            dt = new DataTable();
            if (!connectionObj.OpenConnection())
            {
                MessageBox.Show("Server Connection Failure.   :(");
                return;
            }
            MySqlCommand cmd = new MySqlCommand(queryString, connectionObj.conn);
            MySqlDataAdapter dAdapter = new MySqlDataAdapter(cmd);
            try
            {
                dAdapter.Fill(dt);
                if (QueryLogCheckBox.IsChecked == true)
                    File.AppendAllText(@ServerLogLocation, queryString + "\n");
            }
            catch (MySqlException ex)
            {
                MessageBox.Show("Invalid SQL String. \nSQL String : \"" + queryString + "\"");
                return;
            }
        }

        private void modifyDGrid(DataTable dt)
        {
            if (connectionObj.connState)
            {
                DGrid.ItemsSource = dt.DefaultView;
                connectionObj.CloseConnection();
            }
        }

        private void RefreshButton1_Click(object sender, RoutedEventArgs e)
        {
            fillTable("SELECT * FROM " + connectionObj.table1, ref company);
            modifyDGrid(company);
        }

        private void DBConnectionTestButton_Click(object sender, RoutedEventArgs e)
        {
            if (connectionObj.OpenConnection())
            {
                MessageBox.Show("Server Connection Successful!  :D");
                connectionObj.CloseConnection();
            }
            else
            {
                MessageBox.Show("Server Connection Failure.   :(");
            }
        }

        private void DGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            DGrid.Columns[0].Header = "Sr. No.";
            DGrid.Columns[1].Header = "Company Name";
            DGrid.Columns[2].Header = "Date of \nApproach";
            DGrid.Columns[4].CanUserResize = false;
            DGrid.Columns[5].CanUserResize = false;
            DGrid.Columns[2].MaxWidth = 75;
            DGrid.Columns[3].MaxWidth = 180;
        }

        private void ModifyDBButton_Click(object sender, RoutedEventArgs e)
        {
        }

        private void ClearEntriesButton_Click(object sender, RoutedEventArgs e)
        {
            SrNoField.Text = "";
            CompanyNameField.Text = "";
            DateOfApproachField.SelectedDate = null;
            ResponseBox.SelectedIndex = -1;
            StreamBox.SelectedIndex = -1;
            //ResponseField.Text = "";
            //StreamField.Text = "";
        }

        private void searchMethod()
        {
            if (StreamBox.SelectedIndex == -1)
                StreamBox.SelectedIndex = 3;
            if (ResponseBox.SelectedIndex == -1)
                ResponseBox.SelectedIndex = 3;
            if ((SrNoField.Text == "") && (CompanyNameField.Text == "") && (DateOfApproachField.SelectedDate == null) && (ResponseBox.SelectedIndex == 3) && (StreamBox.SelectedIndex == 3))
            {
                fillTable("SELECT * FROM " + connectionObj.table1 + ";", ref company);
                modifyDGrid(company);
            }
            else
            {
                string[] responseTable = new string[]
                {
                    "Yes",
                    "No",
                    "Floating",
                    ""
                };
                string[] streamTable = new string[]
                {
                    "CSE",
                    "ECE",
                    "CSE/ECE",
                    ""
                };
                string date;
                try
                {
                    date = DateTime.Parse(DateOfApproachField.SelectedDate.ToString()).ToString("yyyy-MM-dd");
                }
                catch (FormatException ex)
                {
                    date = "";
                }
                string cNum = "", cName = "", dOA = "", rspns = "", strm = "";
                if (SrNoField.Text != "")
                    cNum = connectionObj.table1CompanyNum + " = '" + SrNoField.Text + "'|";
                if (CompanyNameField.Text != "")
                    cName = connectionObj.table1CompanyName + " = '" + CompanyNameField.Text + "'|";
                if (date != "")
                    dOA = connectionObj.table1DateOfApproach + " = '" + date + "'|";
                if (ResponseBox.SelectedIndex != 3)
                    rspns = connectionObj.table1Response + " = '" + responseTable[ResponseBox.SelectedIndex] + "'|";
                if (StreamBox.SelectedIndex != 3)
                    strm = connectionObj.table1Stream + " = '" + streamTable[StreamBox.SelectedIndex] + "'|";
                string query = "SELECT * FROM " + connectionObj.table1 + " WHERE " + cNum + cName + dOA + rspns + strm + ";";
                string[] querySplit = query.Split('|');
                query = "";
                for (int i = 0; i < querySplit.Length - 1; i++)
                {
                    if (i == querySplit.Length - 2)
                        query += querySplit[i] + ";";
                    else
                        query += querySplit[i] + " AND ";
                }
                fillTable(query, ref company);
                modifyDGrid(company);
            }
        }

        private void SearchButton_Click(object sender, RoutedEventArgs e)
        {
            searchMethod();
        }

        private void SrNoField_TextChanged(object sender, System.Windows.Controls.TextChangedEventArgs e)
        {
            if (SrNoField.Text != "")
            {
                try
                {
                    Convert.ToInt32(SrNoField.Text);
                }
                catch (FormatException ex)
                {
                    MessageBox.Show("Please enter a number in the Sr. No. Field.");
                    SrNoField.Text = "";
                }
            }
            if (InstaSearchCheckBox.IsChecked == true)
                searchMethod();
        }

        private void CompanyNameField_TextChanged(object sender, System.Windows.Controls.TextChangedEventArgs e)
        {
            if (InstaSearchCheckBox.IsChecked == true)
                searchMethod();
        }

        private void DateOfApproachField_SelectedDateChanged(object sender, System.Windows.Controls.SelectionChangedEventArgs e)
        {
            if (InstaSearchCheckBox.IsChecked == true)
                searchMethod();
        }

        private void ResponseBox_SelectionChanged(object sender, System.Windows.Controls.SelectionChangedEventArgs e)
        {
            if (InstaSearchCheckBox.IsChecked == true)
                searchMethod();
        }

        private void StreamBox_SelectionChanged(object sender, System.Windows.Controls.SelectionChangedEventArgs e)
        {
            if (InstaSearchCheckBox.IsChecked == true)
                searchMethod();
        }

        private void Window_Closed(object sender, EventArgs e)
        {
            File.AppendAllText(@ServerLogLocation, "------SESSION END TIMESTAMP : " + DateTime.Now.ToString() + " ------\n");
        }

        private void DGrid_AutoGeneratingColumn(object sender, System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs e)
        {
            if (e.PropertyType == typeof(System.DateTime))
                (e.Column as DataGridTextColumn).Binding.StringFormat = "dd-MM-yyyy";
        }

        private void DGrid_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            //StreamBoxLabel.Content = "";
            string selectedCompanyName = (string)company.Rows[DGrid.SelectedIndex][1];
            string selectedDateOfApproach = company.Rows[DGrid.SelectedIndex][2].ToString().Remove(10);
            string selectedComments = (string)company.Rows[DGrid.SelectedIndex][3];
            string selectedResponse = (string)company.Rows[DGrid.SelectedIndex][4];
            string selectedStream = (string)company.Rows[DGrid.SelectedIndex][5];
            fillTable("SELECT * FROM " + connectionObj.table2 + " WHERE " + connectionObj.table1CompanyName + " = '" + selectedCompanyName + "' ;", ref contacts);
            fillTable("SELECT * FROM " + connectionObj.table3 + " WHERE " + connectionObj.table1CompanyName + " = '" + selectedCompanyName + "' ;", ref pending);
            InfoBoxBlock.Text = "Company Name : " + selectedCompanyName + "\n\nDate of Approach : " + selectedDateOfApproach + "\n\nComments -\n" + selectedComments + "\n\nResponse : " + selectedResponse + "\n\nStream : " + selectedStream + "\n\nCONTACTS :-\n\n";
            int i = 1;
            foreach (DataRow d in contacts.Rows)
            {
                InfoBoxBlock.Text += i++ + ".) " + (string)d.ItemArray[2] + "\nEmail : " + (string)d.ItemArray[3] + "\nPhone No(s) :-\n" + (string)d.ItemArray[4] + "\n\n";
            }
        }

        private void DGrid_CurrentCellChanged(object sender, EventArgs e)
        {
            //MessageBox.Show("_+_+_+_+_+_");
            //int compNum = DGrid.SelectedIndex + 1;
            //string selectedCompanyName = (string)company.Rows[DGrid.SelectedIndex][1];
            //MessageBox.Show(selectedCompanyName);
        }
    }
}